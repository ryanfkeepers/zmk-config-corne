#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

/ {
    behaviors {
        htr: hold_tap_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            global-quick-tap;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <1 13 25 26 14 2 3 15 27 28 16 4 5 17 29>;
        };

        htl: hold_tap_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            global-quick-tap;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 18 30 31 19 7 8 20 32 33 21 9 10 34 22>;
        };

        shcw: shift_caps_word {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_CAPS_WORD";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&caps_word>, <&kp>;

            quick-tap-ms = <150>;
            require-prior-idle-ms = <500>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <31 19 7 8 20 32 33 21 9 10 34 22 30 18 6 5 17 29 28 16 4 3 15 27 26 14 2 1 13 25>;
        };

        ht_i_sqt: hold_tap_i_sqt {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_I_SQT";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&i_sqt>, <&kp>;

            quick-tap-ms = <175>;
            global-quick-tap;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        ht_thorn: hold_tap_thorn {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_THORN";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&cap_thorn>, <&thorn>;

            quick-tap-ms = <175>;
            global-quick-tap;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        ht_col_eq: ht_colon_eq {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_COLON_EQ";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&colon_eq>, <&kp>;

            quick-tap-ms = <175>;
            global-quick-tap;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <175>;
            global-quick-tap;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        htrs: hold_tap_right_short {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_RIGHT_SHORT";
            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <135>;
            global-quick-tap;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <1 13 25 26 14 2 3 15 27 28 16 4 5 17 29>;
        };

        htls: hold_tap_left_short {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LEFT_SHORT";
            #binding-cells = <2>;
            tapping-term-ms = <125>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <125>;
            global-quick-tap;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 18 30 31 32 33 34 22 10 9 8 7 19 20 21>;
        };
    };

    combos {
        compatible = "zmk,combos";

        SYS_LAYER {
            bindings = <&mo 3>;
            key-positions = <26 27 28 38>;
            timeout-ms = <200>;
            require-prior-idle-ms = <500>;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <2 3 4>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <4 3>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <7 8>;
        };
    };

    //

    macros {
        thorn: thorn {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H>;
            label = "THORN";
        };

        cap_thorn: cap_thorn {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp H>;
            label = "CAP_THORN";
        };

        colon_eq: coleq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp EQUAL>;
            label = "COLEQ";
        };

        i_sqt: iap {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(I) &kp SQT>;
            label = "IAP";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        ALPHA {
            display-name = "Alphabet";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&trans  &kp Q         &kp W        &kp E               &kp R            &kp T            &kp Y    &kp U        &kp I                &kp O        &kp P             &trans
&trans  &lt 2 A       &htl LALT S  &htls LEFT_SHIFT D  &htl LGUI F      &kp G            &kp H    &htr RGUI J  &htrs RIGHT_SHIFT K  &htr RALT L  &kp SQT           &trans
&trans  &htl LCTRL Z  &kp X        &kp C               &kp V            &kp B            &kp N    &kp M        &kp COMMA            &kp DOT      &htr RCTRL SLASH  &trans
                                   &kp ESCAPE          &lt 1 BACKSPACE  &ht_thorn 0 0    &kp RET  &lt 2 SPACE  &caps_word
            >;

            label = "Alphabet";
        };

        SYMNUM {
            display-name = "SymNum";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&trans  &trans                    &ht TILDE GRAVE       &ht LEFT_BRACKET LEFT_PARENTHESIS  &ht RIGHT_BRACKET RIGHT_PARENTHESIS  &kp EQUAL         &ht_col_eq 0 SEMICOLON  &ht GREATER_THAN RIGHT_BRACE  &ht LESS_THAN LEFT_BRACE  &ht UNDERSCORE MINUS  &trans         &trans
&trans  &ht EXCLAMATION NUMBER_1  &ht AT_SIGN NUMBER_2  &ht HASH NUMBER_3                  &ht DOLLAR NUMBER_4                  &ht PERCENT N5    &ht CARET NUMBER_6      &ht AMPERSAND NUMBER_7        &ht ASTERISK NUMBER_8     &kp NUMBER_9          &kp NUMBER_0   &trans
&trans  &trans                    &trans                &trans                             &trans                               &trans            &trans                  &trans                        &trans                    &trans                &kp BACKSLASH  &trans
                                                        &trans                             &trans                               &trans            &kp RALT                &kp RSHIFT                    &kp RGUI
            >;

            label = "SymNum";
        };

        VIMNAV {
            display-name = "VimNav";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp LC(LEFT_ARROW)  &kp LG(LEFT_BRACE)  &kp LG(TAB)  &kp RG(RIGHT_BRACE)  &kp RC(RIGHT_ARROW)    &kp CARET       &kp LC(D)       &kp LC(U)     &kp PERCENT      &kp DOLLAR  &trans
&trans  &trans              &trans              &trans       &trans               &trans                 &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none       &trans
&trans  &trans              &kp LG(LEFT_ARROW)  &trans       &kp RG(RIGHT_ARROW)  &trans                 &kp H           &kp J           &kp K         &kp L            &none       &trans
                                                &trans       &trans               &trans                 &trans          &trans          &trans
            >;

            label = "VimNav";
        };

        SYSTEM {
            display-name = "extra";
            bindings = <
&trans  &bootloader  &trans  &trans  &trans  &trans            &bt BT_CLR    &trans        &bt BT_CLR_ALL  &trans        &bootloader  &trans
&trans  &trans       &trans  &trans  &trans  &studio_unlock    &trans        &trans        &trans          &trans        &trans       &trans
&trans  &trans       &trans  &trans  &trans  &trans            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &trans       &trans
                             &trans  &trans  &trans            &trans        &trans        &trans
            >;

            label = "System";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
